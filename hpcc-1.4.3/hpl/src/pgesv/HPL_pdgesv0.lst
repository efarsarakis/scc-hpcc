%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /fs3/d59/d59/s1361615/isc14/scc-hpcc/hpcc-1.4.3/hpl/lib/arch/build/../../../src/pgesv/HPL_pdgesv0.c
Compiled : 2014-03-24  21:33:44
Compiler : Version 8.2.x.x
Ftnlx    : Version 8232 (libcif 82024)
Target   : x86-64
Command  : driver.cc -h cpu=ivybridge -h static -h network=aries
           -o ../../../src/pgesv/HPL_pdgesv0.o
           -c ../../../src/pgesv/HPL_pdgesv0.c -I ../../../include
           -I ../../../include/CrayX1 -D Add_ -D StringSunStyle
           -D F77_INTEGER=int -O 2 -h list=m -D LONG_IS_64BITS -h restrict=a
           -ibase-compiler /opt/cray/cce/8.2.1/CC/x86-64/compiler_include_base
           -isystem /opt/cray/cce/8.2.1/craylibs/x86-64/include
           -I /opt/gcc/4.4.4/snos/lib/gcc/x86_64-suse-linux/4.4.4/include
           -I /opt/gcc/4.4.4/snos/lib/gcc/x86_64-suse-linux/4.4.4/include-fixed
           -L /opt/cray/cce/8.2.1/CC/x86-64/lib/x86-64
           -W l,-rpath=/opt/cray/cce/8.2.1/CC/x86-64/lib/x86-64
           -L /opt/gcc/4.4.4/snos/lib64 -W l,-rpath=/opt/gcc/4.4.4/snos/lib64
           -L /opt/cray/cce/8.2.1/craylibs/x86-64
           -W l,-rpath=/opt/cray/cce/8.2.1/craylibs/x86-64 -lcraymath
           -lquadmath -lcraymp
           -I /opt/cray/rca/1.0.0-2.0500.41336.1.120.ari/include
           -I /opt/cray/alps/5.0.3-2.0500.8095.1.1.ari/include
           -I /opt/cray/xpmem/0.1-2.0500.41356.1.11.ari/include
           -I /opt/cray/gni-headers/3.0-1.0500.7161.11.4.ari/include
           -I /opt/cray/dmapp/6.0.1-1.0500.7263.9.31.ari/include
           -I /opt/cray/pmi/4.0.1-1.0000.9753.86.2.ari/include
           -I /opt/cray/ugni/5.0-1.0500.0.3.306.ari/include
           -I /opt/cray/udreg/2.3.2-1.0500.6756.2.10.ari/include
           -I /opt/cray-hss-devel/7.0.0/include
           -I /opt/cray/krca/1.0.0-2.0500.41867.2.75.ari/include
           -L /opt/cray/rca/1.0.0-2.0500.41336.1.120.ari/lib64
           -L /opt/cray/alps/5.0.3-2.0500.8095.1.1.ari/lib64
           -L /opt/cray/xpmem/0.1-2.0500.41356.1.11.ari/lib64
           -L /opt/cray/dmapp/6.0.1-1.0500.7263.9.31.ari/lib64
           -L /opt/cray/pmi/4.0.1-1.0000.9753.86.2.ari/lib64
           -L /opt/cray/ugni/5.0-1.0500.0.3.306.ari/lib64
           -L /opt/cray/udreg/2.3.2-1.0500.6756.2.10.ari/lib64
           -I /opt/cray/mpt/6.1.1/gni/mpich2-cray/81/include
           -I /opt/cray/libsci/12.1.2/CRAY/81/sandybridge/include
           -I /opt/fftw/3.3.0.4/sandybridge/include
           -I /opt/cray/rca/1.0.0-2.0500.41336.1.120.ari/include
           -I /opt/cray/alps/5.0.3-2.0500.8095.1.1.ari/include
           -I /opt/cray/xpmem/0.1-2.0500.41356.1.11.ari/include
           -I /opt/cray/gni-headers/3.0-1.0500.7161.11.4.ari/include
           -I /opt/cray/dmapp/6.0.1-1.0500.7263.9.31.ari/include
           -I /opt/cray/pmi/4.0.1-1.0000.9753.86.2.ari/include
           -I /opt/cray/ugni/5.0-1.0500.0.3.306.ari/include
           -I /opt/cray/udreg/2.3.2-1.0500.6756.2.10.ari/include
           -I /opt/cray-hss-devel/7.0.0/include
           -I /opt/cray/krca/1.0.0-2.0500.41867.2.75.ari/include

clx report
------------
Source   : /fs3/d59/d59/s1361615/isc14/scc-hpcc/hpcc-1.4.3/hpl/lib/arch/build/../../../src/pgesv/HPL_pdgesv0.c
Date     : 03/24/2014  21:33:45


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned               f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
                              r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.           /* 
    2.            * -- High Performance Computing Linpack Benchmark (HPL)                
    3.            *    HPL - 2.0 - September 10, 2008                          
    4.            *    Antoine P. Petitet                                                
    5.            *    University of Tennessee, Knoxville                                
    6.            *    Innovative Computing Laboratory                                 
    7.            *    (C) Copyright 2000-2008 All Rights Reserved                       
    8.            *                                                                      
    9.            * -- Copyright notice and Licensing terms:                             
   10.            *                                                                      
   11.            * Redistribution  and  use in  source and binary forms, with or without
   12.            * modification, are  permitted provided  that the following  conditions
   13.            * are met:                                                             
   14.            *                                                                      
   15.            * 1. Redistributions  of  source  code  must retain the above copyright
   16.            * notice, this list of conditions and the following disclaimer.        
   17.            *                                                                      
   18.            * 2. Redistributions in binary form must reproduce  the above copyright
   19.            * notice, this list of conditions,  and the following disclaimer in the
   20.            * documentation and/or other materials provided with the distribution. 
   21.            *                                                                      
   22.            * 3. All  advertising  materials  mentioning  features  or  use of this
   23.            * software must display the following acknowledgement:                 
   24.            * This  product  includes  software  developed  at  the  University  of
   25.            * Tennessee, Knoxville, Innovative Computing Laboratory.             
   26.            *                                                                      
   27.            * 4. The name of the  University,  the name of the  Laboratory,  or the
   28.            * names  of  its  contributors  may  not  be used to endorse or promote
   29.            * products  derived   from   this  software  without  specific  written
   30.            * permission.                                                          
   31.            *                                                                      
   32.            * -- Disclaimer:                                                       
   33.            *                                                                      
   34.            * THIS  SOFTWARE  IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   35.            * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING,  BUT NOT
   36.            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   37.            * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY
   38.            * OR  CONTRIBUTORS  BE  LIABLE FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL,
   39.            * SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT
   40.            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   41.            * DATA OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER CAUSED AND ON ANY
   42.            * THEORY OF LIABILITY, WHETHER IN CONTRACT,  STRICT LIABILITY,  OR TORT
   43.            * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   44.            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
   45.            * ---------------------------------------------------------------------
   46.            */ 
   47.           /*
   48.            * Include files
   49.            */
   50.           #include "hpl.h"
   51.           
   52.           #ifdef HPL_STDC_HEADERS
   53.           void HPL_pdgesv0
   54.           (
   55.              HPL_T_grid *                     GRID,
   56.              HPL_T_palg *                     ALGO,
   57.              HPL_T_pmat *                     A
   58.           )
   59.           #else
   60.           void HPL_pdgesv0
   61.           ( GRID, ALGO, A )
   62.              HPL_T_grid *                     GRID;
   63.              HPL_T_palg *                     ALGO;
   64.              HPL_T_pmat *                     A;
   65.           #endif
   66.           {
   67.           /* 
   68.            * Purpose
   69.            * =======
   70.            *
   71.            * HPL_pdgesv0 factors a N+1-by-N matrix using LU factorization with row
   72.            * partial pivoting.  The main algorithm  is the "right looking" variant
   73.            * without look-ahead. The lower triangular factor is left unpivoted and
   74.            * the pivots are not returned. The right hand side is the N+1 column of
   75.            * the coefficient matrix.
   76.            *
   77.            * Arguments
   78.            * =========
   79.            *
   80.            * GRID    (local input)                 HPL_T_grid *
   81.            *         On entry,  GRID  points  to the data structure containing the
   82.            *         process grid information.
   83.            *
   84.            * ALGO    (global input)                HPL_T_palg *
   85.            *         On entry,  ALGO  points to  the data structure containing the
   86.            *         algorithmic parameters.
   87.            *
   88.            * A       (local input/output)          HPL_T_pmat *
   89.            *         On entry, A points to the data structure containing the local
   90.            *         array information.
   91.            *
   92.            * ---------------------------------------------------------------------
   93.            */ 
   94.           /*
   95.            * .. Local Variables ..
   96.            */
   97.              HPL_T_panel                * * panel = NULL;
   98.              HPL_T_UPD_FUN              HPL_pdupdate;
   99.              int                        N, j, jb, n, nb, tag=MSGID_BEGIN_FACT,
  100.                                         test=HPL_KEEP_TESTING;
  101.           /* ..
  102.            * .. Executable Statements ..
  103.            */
  104.              if( ( N = A->n ) <= 0 ) return;
  105.           
  106.              HPL_pdupdate = ALGO->upfun; nb = A->nb;
  107.           /*
  108.            * Allocate a panel list of length 1 - Allocate panel[0] resources
  109.            */
  110.              panel = (HPL_T_panel **)malloc( sizeof( HPL_T_panel * ) );
  111.              if( panel == NULL )
  112.  +           { HPL_pabort( __LINE__, "HPL_pdgesv0", "Memory allocation failed" ); }
  113.           
  114.  +           HPL_pdpanel_new( GRID, ALGO, N, N+1, Mmin( N, nb ), A, 0, 0, tag,
  115.                               &panel[0] );
  116.           /*
  117.            * Loop over the columns of A
  118.            */
  119.  + 1----<    for( j = 0; j < N; j += nb )
  120.    1         {
  121.    1            n = N - j; jb = Mmin( n, nb );
  122.    1      /*
  123.    1       * Release panel resources - re-initialize panel data structure
  124.    1       */
  125.  + 1            (void) HPL_pdpanel_free( panel[0] );
  126.  + 1            HPL_pdpanel_init( GRID, ALGO, n, n+1, jb, A, j, j, tag, panel[0] );
  127.    1      /*
  128.    1       * Factor and broadcast current panel - update
  129.    1       */
  130.  + 1            HPL_pdfact(               panel[0] );
  131.  + 1            (void) HPL_binit(         panel[0] );
  132.  + 1 2--<       do
  133.  + 1 2          { (void) HPL_bcast(       panel[0], &test ); }
  134.    1 2-->       while( test != HPL_SUCCESS );
  135.  + 1            (void) HPL_bwait(         panel[0] );
  136.  + 1            HPL_pdupdate( NULL, NULL, panel[0], -1 );
  137.    1      /*
  138.    1       * Update message id for next factorization
  139.    1       */
  140.    1            tag = MNxtMgid( tag, MSGID_BEGIN_FACT, MSGID_END_FACT );
  141.    1---->    }
  142.           /*
  143.            * Release panel resources and panel list
  144.            */
  145.  +           (void) HPL_pdpanel_disp( &panel[0] );
  146.           
  147.              if( panel ) free( panel );
  148.           /*
  149.            * End of HPL_pdgesv0
  150.            */
  151.           }

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 112 
  "HPL_pabort" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 114 
  "HPL_pdpanel_new" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.

CC-6287 CC: VECTOR File = HPL_pdgesv0.c, Line = 119 
  A loop was not vectorized because it contains a call to function "HPL_pdpanel_free" on line 125.

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 125 
  "HPL_pdpanel_free" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 126 
  "HPL_pdpanel_init" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 130 
  "HPL_pdfact" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 131 
  "HPL_binit" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.

CC-6287 CC: VECTOR File = HPL_pdgesv0.c, Line = 132 
  A loop was not vectorized because it contains a call to function "HPL_bcast" on line 133.

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 133 
  "HPL_bcast" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 135 
  "HPL_bwait" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 136 
  "HPL_pdupdate" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.

CC-3021 CC: IPA File = HPL_pdgesv0.c, Line = 145 
  "HPL_pdpanel_disp" (called from "HPL_pdgesv0") was not inlined because the compiler was unable to locate the routine.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
